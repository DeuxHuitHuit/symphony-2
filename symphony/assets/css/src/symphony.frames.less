/**
 * Frames are used in different areas of the system to group content,
 * e. g. in the section or data source editor.
 *
 * @since: Symphony 2.3
 */

/*-----------------------------------------------------------------------------
	LESS â€” Variables Importing
-----------------------------------------------------------------------------*/

@import "variables";

/*--------------------------------------------------------------------------
	Basic Frame
--------------------------------------------------------------------------*/

.frame {
	box-sizing: border-box;
	border-radius: var(--radius-current);
	position: relative;
	margin: 0;
	padding: var(--spacing-smallerish);
	border: 2px solid var(--color-main-lighter);
	background: var(--color-ui);
	overflow: hidden;

	h1 {
		padding: var(--spacing-smallest);
		color: var(--color-main);
		font-size: inherit;
		font-weight: normal;
		line-height: inherit;
		background: var(--color-main-lighter);
	}

	a {
		color: var(--color-accent);

		&:hover {
			color: currentColor;
		}
	}

	.tags {
		margin: ~'calc(var(--spacing-smallish) * -1)' 0 var(--spacing-smallerish);
	}

	iframe {
		display: block;
		margin: 0 auto;
		width: 368px;
		max-width: 100%;
		height: 206px;
	}

	> button {
		font-size: var(--text-smaller);
		text-transform: uppercase;
		line-height: 1.6rem;
		margin: 0;
		padding: var(--spacing-smallest) var(--spacing-smallerish);
		background: var(--color-accent);
		border-radius: var(--radius-current);
		cursor: pointer;

		&:not(:disabled):hover {
			border-color: var(--color-main-dark);
			background: var(--color-main-dark);
		}

		&:disabled {
			cursor: default;
		}

		& + button {
			margin-left: var(--spacing-micro);
		}
	}

	.content {
		padding-top: var(--spacing-smallerish);

		.help {
			margin-top: var(--spacing-smallest)!important;
		}
	}

	&.empty {
		min-height: 3.6rem;
	}
}

/* Headers */

.frame-header {
	.flex(~'row', ~'center', ~'flex-start');
	position: relative;
	padding: var(--spacing-smallest) var(--spacing-smallerish);
	border-top: 2px solid var(--color-accent-light);

	h4 {
		.flex(~'row', ~'center', ~'flex-start');
		font-size: var(--text-small);

		* {
			.transitioned(~'color');
		}

		strong {
			font-weight: 400;
		}

		span, & + span {
			color: var(--color-main-dark);
			font-size: var(--text-small);
			padding-left: var(--spacing-smallest);
		}

		svg {
			padding-left: var(--spacing-smallerish);

			* {
				.transitioned(~'fill');
			}
		}

		.required {
			color: var(--color-main);
		}
	}

	> a:first-of-type {
		margin-left: auto!important;
	}

	&.main:before,
	&.sidebar:before {
		content: '';
		display: block;
		width: .1rem;
		height: 1rem;
		margin: 0 var(--spacing-smallest) 0 0;
		border-right: .3rem solid var(--color-main-lighter);
		border-left: .6rem solid var(--color-main-light);
	}

	&.sidebar:before {
		border-right-color: var(--color-main-light);
		border-left-color: var(--color-main-lighter);
	}
}

/*--------------------------------------------------------------------------
	Inline frames (e. g. upload fields)
--------------------------------------------------------------------------*/

span.frame,
fieldset.frame,
.frame.inline {
	display: block;
	margin-bottom: var(--spacing-smaller);
	padding: var(--spacing-smallest);
}

/*--------------------------------------------------------------------------
	Controls
--------------------------------------------------------------------------*/

.duplicator {
	.apply {
		margin-top: 2rem;
	}
}

.frame .destructor,
.frame .debug {
	color: var(--color-main-light);
	font-size: var(--text-small)!important;
	margin: 0 0 0 var(--spacing-smallerish);
}

.frame .destructor {
	margin-left: auto;

	a {
		padding: 0 0 0 var(--spacing-smallest);
	}
}

.frame .destructor:hover,
.frame .debug:hover,
.frame .constructor:hover {
	color: var(--color-main-dark);
}

.frame .disabled {
	/*color: var(--color-main-light);*/
	opacity: 0.5;
	cursor: not-allowed;
}

/* Applicators */

.frame .actions {
	margin: 0 0 var(--spacing-smallest);
}

.frame .actions input {
	margin-top: 0;
}

.frame .actions button {
	float: right;
}

/*-----------------------------------------------------------------------------
	Orderables and Selectables
-----------------------------------------------------------------------------*/

.frame .selected,
.frame .ordering {
	position: relative;
}

.frame .ordering .frame-header span,
.frame .ordering .frame-header .destructor,
.frame .ordering .content i,
.frame .ordering ul.tags {
	color: var(--color-clear);
}

/*-----------------------------------------------------------------------------
	Collapsibles
-----------------------------------------------------------------------------*/

.constructable,
.collapsible {
	padding: 0;
}

fieldset.settings .constructable,
fieldset.settings .collapsible {
	background: none;
}

.constructable > * > li,
.collapsible > * > li {
	overflow: hidden;
	margin-left: ~'calc(var(--spacing-smallerish) * -1)';
	padding: 0 var(--spacing-smallerish)!important;
	width: 100%;

	&:first-of-type .frame-header {
		border: none;
	}

	.content {
		padding: var(--spacing-smallerish);
		border-top: 2px solid var(--color-accent-light);
	}
}

.collapsible .instance.collapsed {
	overflow: hidden;
}

.collapsible .instance,
.collapsible input,
.collapsible textarea,
.collapsible select,
.collapsible option {
	-webkit-font-smoothing: subpixel-antialiased !important;
}

.collapsible legend {
	padding-right: 0.5rem;
}

.collapsed.js-animate,
.destructed.js-animate {
	transition: max-height var(--duration-short) var(--ease-current);
}

.collapsible .js-animate {
	overflow: hidden;
}

.collapsible .instance:not(.collapsed) .frame-header {
	h4, h4 span {
		color: var(--color-accent);
	}
}

.collapsible .field-publishnotes {
	margin-top: 0;
}

.frame .js-animate {
	overflow: hidden;
	transition: max-height var(--duration-short) var(--ease-current);
}

/*-----------------------------------------------------------------------------
	Invalid states
-----------------------------------------------------------------------------*/

.conflict {
	.frame-header {
		background-color: var(--color-error)!important;

		* {
			color: var(--color-clear)!important;

		}
	}
}
